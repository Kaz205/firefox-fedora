diff -up firefox-66.0/extensions/pref/autoconfig/src/nsReadConfig.cpp.1170092 firefox-66.0/extensions/pref/autoconfig/src/nsReadConfig.cpp
--- firefox-66.0/extensions/pref/autoconfig/src/nsReadConfig.cpp.1170092	2019-03-12 01:22:16.000000000 +0100
+++ firefox-66.0/extensions/pref/autoconfig/src/nsReadConfig.cpp	2019-03-12 11:58:36.025238819 +0100
@@ -244,8 +244,20 @@ nsresult nsReadConfig::openAndEvaluateJS
     if (NS_FAILED(rv)) return rv;
 
     rv = NS_NewLocalFileInputStream(getter_AddRefs(inStr), jsFile);
-    if (NS_FAILED(rv)) return rv;
+    if (NS_FAILED(rv)) {
+      // Look for cfg file in /etc/<application>/pref
+      rv = NS_GetSpecialDirectory(NS_APP_PREFS_SYSTEM_CONFIG_DIR,
+                                  getter_AddRefs(jsFile));
+      NS_ENSURE_SUCCESS(rv, rv);
+
+      rv = jsFile->AppendNative(NS_LITERAL_CSTRING("pref"));
+      NS_ENSURE_SUCCESS(rv, rv);
+      rv = jsFile->AppendNative(nsDependentCString(aFileName));
+      NS_ENSURE_SUCCESS(rv, rv);
 
+      rv = NS_NewLocalFileInputStream(getter_AddRefs(inStr), jsFile);
+      NS_ENSURE_SUCCESS(rv, rv);
+    }
   } else {
     nsAutoCString location("resource://gre/defaults/autoconfig/");
     location += aFileName;
diff -up firefox-66.0/modules/libpref/Preferences.cpp.1170092 firefox-66.0/modules/libpref/Preferences.cpp
--- firefox-66.0/modules/libpref/Preferences.cpp.1170092	2019-03-12 01:22:21.000000000 +0100
+++ firefox-66.0/modules/libpref/Preferences.cpp	2019-03-12 11:58:36.026238817 +0100
@@ -4407,6 +4407,8 @@ float MOZ_MAYBE_UNUSED GetPref<float>(co
   //
   // Thus, in the omni.jar case, we always load app-specific default
   // preferences from omni.jar, whether or not `$app == $gre`.
+  // At very end load configuration from system config location:
+  // - /etc/firefox/pref/*.js
 
   nsresult rv;
   nsZipFind* findPtr;
diff -up firefox-66.0/toolkit/xre/nsXREDirProvider.cpp.1170092 firefox-66.0/toolkit/xre/nsXREDirProvider.cpp
--- firefox-66.0/toolkit/xre/nsXREDirProvider.cpp.1170092	2019-03-12 01:22:26.000000000 +0100
+++ firefox-66.0/toolkit/xre/nsXREDirProvider.cpp	2019-03-12 12:05:32.008280260 +0100
@@ -57,6 +57,7 @@
 #endif
 #ifdef XP_UNIX
 #  include <ctype.h>
+#  include "nsIXULAppInfo.h"
 #endif
 #ifdef XP_IOS
 #  include "UIKitDirProvider.h"
@@ -521,6 +522,21 @@ nsXREDirProvider::GetFile(const char* aP
       }
     }
   }
+
+#if defined(XP_UNIX)
+  if (!strcmp(aProperty, NS_APP_PREFS_SYSTEM_CONFIG_DIR)) {
+    nsCString sysConfigDir = NS_LITERAL_CSTRING("/etc/");
+    nsCOMPtr<nsIXULAppInfo> appInfo = do_GetService("@mozilla.org/xre/app-info;1");
+    if (!appInfo)
+      return NS_ERROR_NOT_AVAILABLE;
+    nsCString appName;
+    appInfo->GetName(appName);
+    ToLowerCase(appName);
+    sysConfigDir.Append(appName);
+    return NS_NewNativeLocalFile(sysConfigDir, false, aFile);
+  }
+#endif
+
   if (NS_FAILED(rv) || !file) return NS_ERROR_FAILURE;
 
   if (ensureFilePermissions) {
@@ -877,6 +893,16 @@ nsresult nsXREDirProvider::GetFilesInter
     LoadDirIntoArray(mXULAppDir, kAppendPrefDir, directories);
     LoadDirsIntoArray(mAppBundleDirectories, kAppendPrefDir, directories);
 
+    // Add /etc/<application>/pref/ directory if it exists
+    nsCOMPtr<nsIFile> systemPrefDir;
+    rv = NS_GetSpecialDirectory(NS_APP_PREFS_SYSTEM_CONFIG_DIR,
+                                getter_AddRefs(systemPrefDir));
+    if (NS_SUCCEEDED(rv)) {
+      rv = systemPrefDir->AppendNative(NS_LITERAL_CSTRING("pref"));
+      if (NS_SUCCEEDED(rv))
+        directories.AppendObject(systemPrefDir);
+    }
+
     rv = NS_NewArrayEnumerator(aResult, directories, NS_GET_IID(nsIFile));
   } else if (!strcmp(aProperty, NS_APP_CHROME_DIR_LIST)) {
     // NS_APP_CHROME_DIR_LIST is only used to get default (native) icons
diff -up firefox-66.0/xpcom/io/nsAppDirectoryServiceDefs.h.1170092 firefox-66.0/xpcom/io/nsAppDirectoryServiceDefs.h
--- firefox-66.0/xpcom/io/nsAppDirectoryServiceDefs.h.1170092	2019-03-12 01:22:26.000000000 +0100
+++ firefox-66.0/xpcom/io/nsAppDirectoryServiceDefs.h	2019-03-12 11:58:36.027238815 +0100
@@ -62,6 +62,7 @@
 #define NS_APP_PREFS_DEFAULTS_DIR_LIST "PrefDL"
 #define NS_APP_PREFS_OVERRIDE_DIR \
   "PrefDOverride"  // Directory for per-profile defaults
+#define NS_APP_PREFS_SYSTEM_CONFIG_DIR          "PrefSysConf"   // Directory with system-wide configuration
 
 #define NS_APP_USER_PROFILE_50_DIR "ProfD"
 #define NS_APP_USER_PROFILE_LOCAL_50_DIR "ProfLD"
